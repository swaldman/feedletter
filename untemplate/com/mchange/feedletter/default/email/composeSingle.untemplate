import java.time.ZoneId
import java.time.format.{DateTimeFormatter,FormatStyle}

val htmlTitle = s"""[${info.subscriptionName}] ${info.contents.title.getOrElse("(untitled post)")}"""

val formatter =  DateTimeFormatter.ofLocalizedDateTime(FormatStyle.LONG, FormatStyle.LONG)

def ifLink( link : Option[String], text : String ) : String =
  link.fold(text)(l => s"""<a href="$l">$text</a>""")
end ifLink

( info : ComposeInfo.Single )[]~()>

<html>
  <head>
    <style>
<( style() )>
    </style>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><( htmlTitle )></title>
  </head>
  <body>
    <p>Dear %ToNicknameOrEmail%,</p>

    <p>A <( ifLink(info.contents.link, "new post") )> has been published to <b><( info.subscriptionName )></b>:</p>

    <div class="item">
<()
  info.contents.title.foreach { title =>
()>
      <div class="item-title">
        <( info.contents.link.map(l => s"""<a href="$l">""").getOrElse("") )><( title )><( info.contents.link.map( _ => "</a>" ).getOrElse("") )>
      </div>
<()
  }
  info.contents.author.foreach { author =>
()>
      <div class="item-author">
        by <( author )>
      </div>
<()
  }
  info.contents.article.foreach { article =>
()>
      <div class="item-contents">
        <( article )>
      </div>
<()
  }
  info.contents.pubDate.foreach { pubDate =>
()>
      <div class="item-date">
        Published <( formatter.format( pubDate.atZone(ZoneId.systemDefault()) ) )>
      </div>
<()
  }
()>
    </div>
    <div class="unsubscribe">
      <p>
        You are subscribed as <code>%ToEmail%</code> to the mailing list <( info.subscriptionName )>.
        We'd miss you, but you can click <a href="%RemoveLink%">here</a> to unsubscribe.
      </p>
    </div>
  </body>
</html>

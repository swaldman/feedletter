//| mill-version: 1.0.3
//| mill-jvm-version: 21
//| mvnDeps: ["com.lihaoyi::mill-contrib-buildinfo:$MILL_VERSION","com.mchange::mill-daemon:0.2.1-SNAPSHOT","com.mchange::untemplate-mill:0.3.0-SNAPSHOT"]
//+---------------------------------------------------------------------------------------------------------

package build

import mill.*, scalalib.*, publish.*

import mill.api.BuildCtx

import mill.contrib.buildinfo.BuildInfo

import untemplate.mill._
import com.mchange.milldaemon.DaemonModule

import scala.util.control.NonFatal

object `package` extends DaemonModule with UntemplateModule with SonatypeCentralPublishModule with BuildInfo {

  val FeedletterVersion = "0.2.1-SNAPSHOT"
  
  override def scalaVersion = "3.3.6"

  override def scalacOptions = Task { Seq("-deprecation", "-explain-cyclic") }

  override def sonatypeCentralShouldRelease: T[Boolean] = Task { false }

  val TapirVersion = "1.11.35"

  def mvnDeps = Seq(
    mvn"com.mchange::logadapter-scala-zio:0.0.1",
    mvn"com.mchange::sqlutil-scala-zio:0.0.5",
    mvn"com.mchange::mill-daemon-util:0.2.1-SNAPSHOT", // don't forget to also update mill-daemon in build-level 'mvnDeps' above
    mvn"com.mchange::audiofluidity-rss:0.1.0",
    mvn"com.mchange::conveniences:0.0.5",
    mvn"com.mchange::texttable:0.0.3",
    mvn"com.mchange::mailutil:0.0.5",
    mvn"com.mchange::cryptoutil:0.0.2",
    mvn"com.mchange::untemplate:0.3.0-SNAPSHOT", // don't forget to also update untemplate in build-level 'mvnDeps' above
    mvn"com.mchange:c3p0:0.11.2",
    mvn"dev.zio::zio:2.1.19",
    mvn"com.monovore::decline:2.4.1",
    mvn"org.postgresql:postgresql:42.7.7",
    mvn"org.scala-lang.modules::scala-xml:2.2.0",
    mvn"com.lihaoyi::os-lib:0.11.4",
    mvn"com.lihaoyi::requests:0.9.0",
    mvn"com.lihaoyi::upickle:4.2.1",
    mvn"com.softwaremill.sttp.tapir::tapir-zio:${TapirVersion}",
    mvn"com.softwaremill.sttp.tapir::tapir-zio-http-server:${TapirVersion}",
    mvn"com.softwaremill.sttp.tapir::tapir-json-upickle:${TapirVersion}",
  )

  override def runDaemonPidFile = defaultRunDaemonPidFile("feedletter")

  def buildInfoMembers = Seq(
    BuildInfo.Value("version", publishVersion())
  )
  def buildInfoPackageName = "com.mchange.feedletter"

  // we'll build an index!
  override def untemplateIndexNameFullyQualified : Option[String] = Some("com.mchange.feedletter.IndexedUntemplates")

  override def untemplateSelectCustomizer: untemplate.Customizer.Selector = { key =>
    var out = untemplate.Customizer.empty

    // to customize, examine key and modify the customer
    // with out = out.copy=...
    //
    // e.g. out = out.copy(extraImports=Seq("draft.*"))

    out = out.copy(extraImports=Seq("com.mchange.feedletter.*","com.mchange.feedletter.style.*"))

    out
  }

  override def artifactName = "feedletter"
  override def publishVersion =  Task { FeedletterVersion }
  override def pomSettings    = Task {
    PomSettings(
      description = "A service that carefully watches RSS feeds and mails newsletters or sends notifications based on items that stablely appear.",
      organization = "com.mchange",
      url = "https://github.com/swaldman/feedletter",
      licenses = Seq(License.`AGPL-3.0-only`),
      versionControl = VersionControl.github("swaldman", "feedletter"),
      developers = Seq(
        Developer("swaldman", "Steve Waldman", "https://github.com/swaldman")
      )
    )
  }
}

